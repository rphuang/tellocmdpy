# tello.kv for Android portrait
<MainWidget>:
    orientation: 'vertical'
  
    BoxLayout:
        orientation: 'horizontal'
        size_hint: (1, 0.1)
        Button:
            id: LandButton
            text: 'Land'
            on_release: root.land()
        Button:
            id: TakeoffButton
            text: 'Takeoff'
            on_release: root.takeoff()
        Button:
            id: ConnectButton
            text: 'Connect'
            on_release: root.connect()
    BoxLayout:
        orientation: 'horizontal'
        size_hint: (1, 0.1)
        Button:
            id: RunDemoButton
            text: 'Run Demo'
            on_release: root.runCommandFromFileAsync('samples/simple.txt')
        Button:
            id: VideoButton
            text: 'Video'
            on_release: root.startOrStopVideoAsync()
        Button:
            id: PhotoButton
            text: 'Photo'
            on_release: root.takePictureAsync()

    BoxLayout:
        orientation: 'horizontal'
        size_hint: (1, 0.1)
        Button:
            id: FlyPathButton
            text: '  '
            #on_release: root.takeoff()
        Button:
            id: FaceTrackButton
            text: 'Face Tracking'
            on_release: root.startOrStopFaceTrackingAsync()
        Button:
            id: StreamButton
            text: 'Stream'
            on_release: root.startOrStopStreamVideoAsync()

    GridLayout:
        cols: 4
        size_hint: (1, 0.2)
        row_force_default: True
        row_default_height: 68
        #padding: 10, 10

        Label:
            text: 'Vid Width'
            size_hint_x: 0.2
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        TextInput:
            id: WidthInput
            text: '960'
            multiline: False
            size_hint_x: 0.3
            text_size: self.size
            halign: 'left'
            valign: 'middle'
            on_text_validate: root.videoWidth = int(self.text)
        Label:
            text: 'Speed: '
            size_hint_x: 0.2
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        TextInput:
            id: SpeedInput
            text: '50'
            multiline: False
            size_hint_x: 0.3
            text_size: self.size
            halign: 'left'
            valign: 'middle'
            on_text_validate: root.setSpeed(self.text)
        Label:
            text: 'VidHeight'
            size_hint_x: 0.2
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        TextInput:
            id: HeightInput
            text: '720'
            multiline: False
            size_hint_x: 0.3
            text_size: self.size
            halign: 'left'
            valign: 'middle'
            on_text_validate: root.videoHeight = int(self.text)
        Label:
            text: 'Status: '
            size_hint_x: 0.2
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        Label:
            id: StatusLabel
            text: 'Not Connected'
            size_hint_x: 0.3
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        Label:
            text: 'Height: '
            size_hint_x: 0.2
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        Label:
            id: HeightLabel
            text: '0'
            size_hint_x: 0.3
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        Label:
            text: 'Battery: '
            size_hint_x: 0.2
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        Label:
            id: BatteryLabel
            text: '100%'
            size_hint_x: 0.3
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        Label:
            text: 'Time: '
            size_hint_x: 0.2
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        Label:
            id: FlighttimeLabel
            text: '0'
            size_hint_x: 0.3
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        Label:
            text: 'Temp: '
            size_hint_x: 0.2
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        Label:
            id: TempLabel
            text: ' '
            size_hint_x: 0.3
            text_size: self.size
            halign: 'left'
            valign: 'middle'

    BoxLayout:
        orientation: 'horizontal'
        size_hint: (1, 0.45)
        Label:
            id: CommandLabel
            text: 'cmd: '
            font_size: 42
            text_size: root.width, None
            size: self.texture_size
            text_size: self.size
            halign: 'left'
            valign: 'top'

    BoxLayout:
        orientation: 'horizontal'

        BoxLayout:
            orientation: 'vertical'
            
            Button:
                id: CircleLeftButton
                text: 'Circle Left'
                on_press: root.sendRcControl(-1, 1, 0, 1)
                on_release: root.sendRcControl(0, 0, 0, 0)
            Button:
                id: UpButton
                text: 'Up'
                on_press: root.sendRcControl(0, 0, 1, 0)
                on_release: root.sendRcControl(0, 0, 0, 0)
            BoxLayout:
                orientation: 'horizontal'
                Button:
                    id: CCWButton
                    text: 'CCW Rotate'
                    on_press: root.sendRcControl(0, 0, 0, -1)
                    on_release: root.sendRcControl(0, 0, 0, 0)
                Button:
                    id: CWButton
                    text: 'CW Rotate'
                    on_press: root.sendRcControl(0, 0, 0, 1)
                    on_release: root.sendRcControl(0, 0, 0, 0)
            Button:
                id: DownButton
                text: 'Down'
                on_press: root.sendRcControl(0, 0, -1, 0)
                on_release: root.sendRcControl(0, 0, 0, 0)

        BoxLayout:
            orientation: 'vertical'
            
            Button:
                id: CircleRightButton
                text: 'Circle Right'
                on_press: root.sendRcControl(1, 1, 0, -1)
                on_release: root.sendRcControl(0, 0, 0, 0)
            Button:
                id: ForwardButton
                text: 'Forward'
                on_press: root.sendRcControl(0, 1, 0, 0)
                on_release: root.sendRcControl(0, 0, 0, 0)
            BoxLayout:
                orientation: 'horizontal'
                Button:
                    id: LeftButton
                    text: 'Left'
                    on_press: root.sendRcControl(-1, 0, 0, 0)
                    on_release: root.sendRcControl(0, 0, 0, 0)
                Button:
                    id: RightButton
                    text: 'Right'
                    on_press: root.sendRcControl(1, 0, 0, 0)
                    on_release: root.sendRcControl(0, 0, 0, 0)
            Button:
                id: BackwardButton
                text: 'Backward'
                on_press: root.sendRcControl(0, -1, 0, 0)
                on_release: root.sendRcControl(0, 0, 0, 0)

